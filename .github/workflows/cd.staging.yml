name: Deploy Staging ðŸš€

on:
  push:
    branches:
      - master

jobs:
  deploy-staging:
    name: Deploy to staging server
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Deploy to staging server
        uses: appleboy/ssh-action@v1.0.3
        env:
          APP_STG_PORT: ${{ secrets.APP_STG_PORT}}
          APP_STG_PATH: ${{ vars.APP_STG_PATH }}
          MINIO_STG_ENDPOINT: ${{ secrets.MINIO_STG_ENDPOINT }}
          MINIO_STG_ACCESS_KEY: ${{ secrets.MINIO_STG_ACCESS_KEY }}
          MINIO_STG_SECRET_KEY: ${{ secrets.MINIO_STG_SECRET_KEY }}
          GIT_URL: ${{ secrets.GIT_URL }}

        with:
          host: ${{ secrets.SSH_HOST_STAGING }}
          username: ${{ secrets.SSH_USER_NAME_STAGING }}
          password: ${{ secrets.SSH_PASS }}
          envs: APP_STG_PORT, APP_STG_PATH, MINIO_STG_ENDPOINT, MINIO_STG_ACCESS_KEY, MINIO_STG_SECRET_KEY, GIT_URL
          script: |

            # Check if application path exists
            if [[ -d "${APP_STG_PATH}" ]]; then 
              cd "${APP_STG_PATH}"
              docker compose down pacmusic-stg
              git pull origin master
            else
              mkdir -p "${APP_STG_PATH}"
              ssh-keyscan -H github.com >> ~/.ssh/known_hosts
              git clone "${GIT_URL}" "${APP_STG_PATH}"
              cd "${APP_STG_PATH}"
            fi

            # Update environment variables in .env file
            echo "APP_STG_PORT=${APP_STG_PORT}" > .env
            echo "MINIO_STG_ENDPOINT=${MINIO_STG_ENDPOINT}" >> .env
            echo "MINIO_STG_ACCESS_KEY=${MINIO_STG_ACCESS_KEY}" >> .env
            echo "MINIO_STG_SECRET_KEY=${MINIO_STG_SECRET_KEY}" >> .env

            # Restart the application
            docker compose up -d pacmusic-stg

      - name: Test endpoint
        run: |
          curl ${{ secrets.APP_STG_PORT }}
