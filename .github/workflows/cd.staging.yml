name: Deploy Staging ðŸš€

on:
  push:
    branches:
      - master

jobs:
  deploy-staging:
    name: Deploy to staging server
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Deploy to staging serverve
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST_STAGING }}
          username: ${{ secrets.SSH_USER_NAME_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          script: |
            # Set environment variables
            export APP_STG_PATH="${{ vars.APP_STG_PATH }}"
            export GIT_URL="${{ vars.GIT_URL }}"
            export MINIO_STG_ENDPOINT="${{ secrets.MINIO_STG_ENDPOINT }}"
            export MINIO_STG_ACCESS_KEY="${{ secrets.MINIO_STG_ACCESS_KEY }}"
            export APP_STG_PORT="${{ secrets.APP_STG_PORT }}"
            export MINIO_STG_SECRET_KEY="${{ secrets.MINIO_STG_SECRET_KEY }}"

            # Check if application path exists
            if [[ -d "/home/ubuntu/${APP_STG_PATH}" ]]; then 
              cd /home/ubuntu/${APP_STG_PATH}
              docker compose down pacmusic-stg
              git pull origin master
            else
              mkdir -p /home/ubuntu/${APP_STG_PATH}
              ssh-keyscan -H github.com >> ~/.ssh/known_hosts
              git clone $GIT_URL /home/ubuntu/${APP_STG_PATH}
              cd /home/ubuntu/${APP_STG_PATH}
            fi

            # Update environment variables in .env file
            echo "APP_STG_PORT=${APP_STG_PORT}" > .env
            echo "MINIO_STG_ENDPOINT=${MINIO_STG_ENDPOINT}" >> .env
            echo "MINIO_STG_ACCESS_KEY=${MINIO_STG_ACCESS_KEY}" >> .env
            echo "MINIO_STG_SECRET_KEY=${MINIO_STG_SECRET_KEY}" >> .env

            # Restart the application
            docker compose up -d pacmusic-stg

      - name: Test endpoint
        run: |
          curl ${{ secrets.STAGING_APP_URL }}
